version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: quiz_master_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: quiz_master
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - quiz_master_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: quiz_master_backend
    restart: unless-stopped
    ports:
      - '3001:3001'
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: quiz_master
      PORT: 3001
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - quiz_master_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: quiz_master_frontend
    restart: unless-stopped
    ports:
      - '3000:3000'
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: http://backend:3001
    depends_on:
      - backend
    networks:
      - quiz_master_network

volumes:
  postgres_data:

networks:
  quiz_master_network:
    driver: bridge
